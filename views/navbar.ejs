<!-- Required CSS links -->
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
  rel="stylesheet"
/>
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css"
  rel="stylesheet"
/>
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
/>
<link
  href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap"
  rel="stylesheet"
/>

<style>
  :root {
    --nav-bg: linear-gradient(135deg, #663399, #9370db);
    --nav-accent: #dd88cf;
    --nav-text: #f8e7f6;
    --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .navbar {
    background: var(--nav-bg);
    font-family: "Poppins", Arial, sans-serif;
    padding: 15px 0;
    position: fixed;
    width: 100%;
    top: 0;
    left: 0;
    z-index: 1000;
  }

  .navbar::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      45deg,
      rgba(102, 51, 153, 0.1),
      rgba(147, 112, 219, 0.1)
    );
    animation: gradientMove 15s infinite linear;
  }

  .navbar-brand {
    color: var(--nav-text) !important;
    font-size: 24px;
    font-weight: bold;
    position: relative;
    z-index: 1;
    transition: var(--transition);
  }

  .navbar-brand:hover {
    color: var(--nav-accent) !important;
    transform: translateY(-2px);
  }

  .nav-link {
    color: var(--nav-text) !important;
    position: relative;
    padding: 8px 15px !important;
    transition: var(--transition);
    font-weight: 400;
  }

  .nav-link::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: var(--nav-accent);
    transition: var(--transition);
    transform: translateX(-50%);
  }

  .nav-link:hover {
    color: var(--nav-accent) !important;
    transform: translateY(-2px);
  }

  .nav-link:hover::after {
    width: 70%;
  }

  /* Make all nav items consistent */
  .nav-item {
    display: flex;
    align-items: center;
    margin: 0 5px;
  }

  /* Style for both Services and Login links */
  .nav-item .nav-link {
    text-decoration: none;
    position: relative;
    overflow: hidden;
    font-size: 16px;
  }

  /* Active state for nav links */
  .nav-link.active {
    color: var(--nav-accent) !important;
    font-weight: 500;
  }

  .nav-link.active::after {
    width: 70%;
  }

  /* Style for the navbar toggler button */
  .navbar-toggler {
    border-color: transparent; /* Remove default border color */
    background-color: var(
      --nav-bg
    ); /* Set the background color to match the navbar */
    z-index: 1050;
  }

  /* Change the color of the hamburger icon lines to white */
  .navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='%23ffffff' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
  }
  .bi-person-circle {
    font-size: 1.2rem;
    transition: var(--transition);
  }

  .nav-item:hover .bi-person-circle {
    color: var(--nav-accent);
    transform: scale(1.1);
  }

  .nav-profile-img {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid var(--nav-text);
    transition: var(--transition);
  }

  .nav-item:hover .nav-profile-img {
    border-color: var(--nav-accent);
    transform: scale(1.1);
  }

  @media (max-width: 991px) {
    .navbar-collapse {
      background: var(--nav-bg);
      padding: 15px;
      border-radius: 0 0 10px 10px;
    }

    .nav-link::after {
      left: 0;
      transform: none;
    }

    .nav-link:hover::after {
      width: 50px;
    }
  }
  @media (max-width: 991px) {
    .navbar-nav {
      flex-direction: column !important;
      align-items: start;
    }

    .navbar-collapse {
      background-color: var(--nav-bg);
      padding: 15px;
      border-radius: 0 0 10px 10px;
      z-index: 1000;
      position: relative;
    }

    .navbar .nav-link::after {
      display: none; /* Hide hover underline on mobile */
    }

    .navbar-nav .nav-item {
      margin: 10px 0;
    }
  }
</style>

<!-- Navbar -->
<nav class="navbar navbar-expand-lg">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">BayLeaf Salon</a>
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="collapse"
      data-bs-target="#navbarNav"
      aria-controls="navbarNav"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item" style="display: block">
          <a class="nav-link" href="/">Home</a>
        </li>
        <li class="nav-item" id="loginButton">
          <a class="nav-link" href="/login">Login</a>
        </li>
        <li class="nav-item" id="bookAppointmentbtn" style="display: none">
          <a class="nav-link" href="/cart">Book Appointment</a>
        </li>
        <li class="nav-item" id="myAppointmentsBtn" style="display: none">
          <a class="nav-link" href="/myappointments"> My Appointments </a>
        </li>
        <li class="nav-item" id="logoutButton" style="display: none">
          <a class="nav-link" href="#" onclick="handleLogout()">
            <i class="bi bi-box-arrow-right me-1"></i>Logout
          </a>
        </li>

        <li class="nav-item" id="profileIcon" style="display: none">
          <a class="nav-link" href="/profile">
            <img
              src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='120' height='120' viewBox='0 0 120 120'%3E%3Ccircle cx='60' cy='60' r='60' fill='%239370DB'/%3E%3Ccircle cx='60' cy='45' r='20' fill='%23E6E6FA'/%3E%3Cpath d='M60 75 C40 75 20 95 20 115 L100 115 C100 95 80 75 60 75Z' fill='%23E6E6FA'/%3E%3C/svg%3E"
              alt="Profile"
              class="nav-profile-img"
              onerror="this.src='data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'120\' height=\'120\' viewBox=\'0 0 120 120\'%3E%3Ccircle cx=\'60\' cy=\'60\' r=\'60\' fill=\'%239370DB\'/%3E%3Ccircle cx=\'60\' cy=\'45\' r=\'20\' fill=\'%23E6E6FA\'/%3E%3Cpath d=\'M60 75 C40 75 20 95 20 115 L100 115 C100 95 80 75 60 75Z\' fill=\'%23E6E6FA\'/%3E%3C/svg%3E'"
            />
          </a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  async function handleLogout() {
    try {
      const res = await fetch("/auth/logout", { method: "GET" });
      if (res.ok) {
        window.location.href = "/"; // Redirect to home after logout
      }
    } catch (err) {
      console.error("Logout failed:", err);
    }
  }
  document.addEventListener("DOMContentLoaded", function () {
    const loginButton = document.getElementById("loginButton");
    const profileIcon = document.getElementById("profileIcon");
    const bookAppointmentbtn = document.getElementById("bookAppointmentbtn");
    const myAppointmentsBtn = document.getElementById("myAppointmentsBtn");
    const logoutButton = document.getElementById("logoutButton");

    // Function to check if the user is logged in
    async function checkUserLogin() {
      try {
        const response = await fetch("/api/userRole", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        const data = await response.json();

        if (data.success) {
          loginButton.style.display = "none";
          profileIcon.style.display = "block";
          bookAppointmentbtn.style.display = "block";
          myAppointmentsBtn.style.display = "block";

          // Inside checkUserLogin success block:
          logoutButton.style.display = "block";

          // Update profile photo if available
          if (data.photoUrl) {
            const profileImg = profileIcon.querySelector("img");
            profileImg.src = data.photoUrl;
          }
        } else {
          loginButton.style.display = "block";
          profileIcon.style.display = "none";
          bookAppointmentbtn.style.display = "none";
          myAppointmentsBtn.style.display = "none";

          // Inside else block:
          logoutButton.style.display = "none";
        }
      } catch (error) {
        console.error("Error checking user login:", error);
      }
    }

    // Check login status when page loads
    checkUserLogin();
  });
</script>
